{"version":3,"sources":["components/Header/Header.js","components/Footer/Footer.js","components/Card/Card.js","components/PopularMovies/PopularMovies.js","components/MovieDetails/MovieDetails.js","components/Error/Error.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","NavLink","to","aria-haspopup","aria-labelledby","placeholder","Component","Footer","Card","linkMovieDetails","pathname","movieID","style","width","src","moviePoster","alt","movieTitle","movieDescription","substring","Link","apiKey","apiURL","PopularMovies","getPopularMovies","fetch","method","then","res","json","setState","popularMovies","results","console","log","catch","e","map","m","components_Card_Card","key","title","overview","backdrop_path","movieDetailsURL","MovieDetails","getMovieDetails","mID","movieDetails","match","params","bgImage","posterImage","poster_path","Error","App","BrowserRouter","components_Header_Header","Switch","Route","path","component","exact","components_Footer_Footer","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sRAmEeA,cA9DX,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,GAFEP,wEAOf,OACEQ,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oEACfH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeC,KAAK,KAAjC,WACAJ,EAAAC,EAAAC,cAAA,UAAQC,UAAU,iBAAiBE,KAAK,SAASC,cAAY,WAAWC,cAAY,yBAAyBC,gBAAc,wBAAwBC,gBAAc,QAAQC,aAAW,qBAClLV,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAGlBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BQ,GAAG,yBAC3CX,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAEZH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAST,UAAU,WAAWU,GAAG,KAAjC,SAEFb,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAST,UAAU,WAAWU,GAAG,KAAjC,YAEFb,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAST,UAAU,WAAWU,GAAG,KAAjC,WAEFb,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAST,UAAU,WAAWU,GAAG,KAAjC,aAQFb,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBACZH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAST,UAAU,2BAA2BU,GAAG,sBAAsBF,GAAG,aAAaL,cAAY,WAAWQ,gBAAc,OAAOL,gBAAc,SAAjJ,YACAT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBY,kBAAgB,cAC7Cf,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgBC,KAAK,KAAlC,UACAJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgBC,KAAK,KAAlC,kBACAJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgBC,KAAK,KAAlC,0BAINJ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,4BACdH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,uBAAuBE,KAAK,OAAOW,YAAY,SAASN,aAAW,WACpFV,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uCAAuCE,KAAK,UAA9D,qBAhDKY,aCsBNC,cArBX,SAAAA,EAAY3B,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuB,IACf1B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyB,GAAApB,KAAAH,KAAMJ,KACDQ,MAAQ,GAFEP,wEAOf,OACIQ,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iEACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAb,UACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAChBH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,uBAAuBE,KAAK,SAASW,YAAY,SAASN,aAAW,WACtFV,EAAAC,EAAAC,cAAA,UAAQC,UAAU,uCAAuCE,KAAK,UAA9D,oBAdCY,qBCgCNE,cA/Bb,SAAAA,EAAY5B,GAAQ,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAwB,GAAA1B,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA0B,GAAArB,KAAAH,KACZJ,0EAON,IAAM6B,EAAmB,CACvBC,SAAU,UAAY1B,KAAKJ,MAAM+B,QACjCvB,MAAOJ,KAAKJ,OAQd,OACES,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBoB,MALlB,CACdC,MAAO,UAKLxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAesB,IAAK9B,KAAKJ,MAAMmC,YAAaC,IAAI,KAC/D3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcR,KAAKJ,MAAMqC,WAAvC,KACA5B,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAaR,KAAKJ,MAAMsC,iBAAiBC,UAAU,EAAG,KAAnE,OACA9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAMlB,GAAIO,EAAmBjB,UAAU,mBAAvC,oBA1BSc,aCAbe,EAAS,mCACTC,EAAS,+EAAiFD,EAkEjFE,cA9DX,SAAAA,EAAY3C,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuC,IACf1C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyC,GAAApC,KAAAH,KAAMJ,KAOV4C,iBAAmB,WAEfC,MAAMH,EAAQ,CACVI,OAAQ,QACTC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAClBF,KAAK,SAAAC,GACJ/C,EAAKiD,SAAS,CAAEC,cAAeH,EAAII,YAEpCL,KAAK,SAAAC,GAAG,OAAIK,QAAQC,IAAIrD,EAAKO,SAC7B+C,MAAM,SAAAC,GAAC,OAAIH,QAAQC,IAAIE,MAdxBvD,EAAKO,MAAQ,CACT2C,cAAe,IAJJlD,mFAqBfG,KAAKwC,oDAML,IAKOO,EAAkB/C,KAAKI,MAAvB2C,cACJtB,EAAmB,GAEtB,OACIpB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEPuC,EAAcM,IAAI,SAACC,GAIf,OAFA7B,EAAmB,sCAAwC6B,EAAEtC,GAAK,YAAcqB,EAG5EhC,EAAAC,EAAAC,cAACgD,EAAD,CACQC,IAAKF,EAAEtC,GACPW,QAAS2B,EAAEtC,GACXiB,WAAYqB,EAAEG,MACdvB,iBAAkBoB,EAAEI,SACpB3B,YArDzB,mCAqDqDuB,EAAEK,cAC9BC,gBAAmBnC,gBApDnCH,aCHtBe,SAAS,oCACTC,EAAS,sCA2EAuB,cAtEX,SAAAA,EAAYjE,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6D,IACfhE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+D,GAAA1D,KAAAH,KAAMJ,KAUVkE,gBAAkB,SAACC,GAEftB,MAAMH,EAASyB,EAAM,YAAc1B,EAAQ,CACvCK,OAAQ,QACTC,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAClBF,KAAK,SAAAC,GACJ/C,EAAKiD,SAAS,CAAEkB,aAAcpB,MAE/BD,KAAK,SAAAC,GAAG,OAAIK,QAAQC,IAAIrD,EAAKO,SAC7B+C,MAAM,SAAAC,GAAC,OAAIH,QAAQC,IAAIE,MAjBxBH,QAAQC,IAAIrD,EAAKD,MAAMqE,MAAMC,OAAOlD,IAEpCnB,EAAKO,MAAQ,CACTuB,QAAS9B,EAAKD,MAAMqE,MAAMC,OAAOlD,GACjCgD,aAAc,IAPHnE,mFAwBfG,KAAK8D,gBAAgB9D,KAAKI,MAAMuB,0CAI3B,IAEGqC,EAAiBhE,KAAKI,MAAtB4D,aAEJG,EApCG,uCAoCiBH,EAAaL,cACjCS,EApCO,mCAoCqBJ,EAAaK,YAG7CpB,QAAQC,IAAIiB,GAeZ,OACQ9D,EAAAC,EAAAC,cAAA,OAAKS,GAAG,2BAA2BY,MAdtB,IAeTvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAGfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKuB,IAAKsC,KAGd/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACPH,EAAAC,EAAAC,cAAA,UAAKyD,EAAaP,iBA9DnBnC,aCSZgD,cAfX,SAAAA,EAAY1E,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAsE,IACfzE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwE,GAAAnE,KAAAH,KAAMJ,KACDQ,MAAQ,GAFEP,wEAOf,OACIQ,EAAAC,EAAAC,cAAA,qCATQe,aC6CLiD,qBAlCb,SAAAA,EAAY3E,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuE,IACjB1E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyE,GAAApE,KAAAH,KAAMJ,KACDQ,MAAQ,GAFIP,qHAgBjB,OACMQ,EAAAC,EAAAC,cAACiE,EAAA,EAAD,KACEnE,EAAAC,EAAAC,cAAA,OAAKS,GAAG,kBACNX,EAAAC,EAAAC,cAACkE,EAAD,MACApE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAACmE,EAAA,EAAD,KACErE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAOC,KAAK,IAAIC,UAAWtC,EAAeuC,OAAK,IAC/CzE,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAOC,KAAK,aAAaC,UAAWhB,IACpCxD,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAOE,UAAWP,MAGtBjE,EAAAC,EAAAC,cAACwE,EAAD,eA5BIzD,cCFE0D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASlB,MACvB,2DCVNmB,IAASC,OAAOhF,EAAAC,EAAAC,cAAC+E,EAAD,MAASC,SAASC,eAAe,SDmH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhD,KAAK,SAAAiD,GACjCA,EAAaC","file":"static/js/main.98ce6058.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {              \r\n        };\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n          <header>\r\n            <nav className=\"navbar navbar-expand-md navbar-dark company-background fixed-top\">\r\n            <a className=\"navbar-brand\" href=\"#\">MovieDB</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExampleDefault\" aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n      \r\n            <div className=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\r\n              <ul className=\"navbar-nav mr-auto\">\r\n                <li className=\"nav-item active\">\r\n                  {/* <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a> */}\r\n                  <NavLink className=\"nav-link\" to=\"/\">Home</NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/\">Weather</NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/\">Videos</NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/\">About Us</NavLink>\r\n                </li>\r\n                {/* \r\n                // Disabled Link\r\n                <li className=\"nav-item\">\r\n                  <a className=\"nav-link disabled\" href=\"#\">Disabled</a>\r\n                </li> \r\n                */}\r\n                <li className=\"nav-item dropdown\">\r\n                  <NavLink className=\"nav-link dropdown-toggle\" to=\"https://example.com\" id=\"dropdown01\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Services</NavLink>\r\n                  <div className=\"dropdown-menu\" aria-labelledby=\"dropdown01\">\r\n                    <a className=\"dropdown-item\" href=\"#\">Action</a>\r\n                    <a className=\"dropdown-item\" href=\"#\">Another action</a>\r\n                    <a className=\"dropdown-item\" href=\"#\">Something else here</a>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n              <form className=\"form-inline my-2 my-lg-0\">\r\n                <input className=\"form-control mr-sm-2\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n              </form>\r\n            </div>\r\n          </nav>\r\n          </header>\r\n\r\n                // <NavLink to=\"/\">Home</NavLink>             \r\n                // <NavLink to=\"/\">Weather</NavLink>             \r\n                // <NavLink to=\"/\">Videos</NavLink>             \r\n                // <NavLink to=\"/\">About Us</NavLink>             \r\n                // <NavLink to=\"/\">Contact Us</NavLink>  \r\n         );\r\n    }\r\n}\r\n \r\nexport default Header;","import React, { Component } from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nclass Footer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {              \r\n        };\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <footer className=\"footer\">  \r\n                <nav className=\"navbar navbar-dark company-background justify-content-between\">\r\n                    <a className=\"navbar-brand\">Footer</a>\r\n                    <form className=\"form-inline\">\r\n                    <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n                    </form>\r\n                </nav>             \r\n            </footer>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Footer;","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Card extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    \r\n  }\r\n\r\n  render() {\r\n\r\n    const linkMovieDetails = {\r\n      pathname: \"/movie/\" + this.props.movieID,\r\n      state: this.props\r\n    }\r\n    \r\n\r\n    var cardStyle = {\r\n      width: \"30rem\"\r\n    };\r\n\r\n    return ( \r\n      <div className=\"card ml-4 mt-4\" style={cardStyle}>\r\n        <img className=\"card-img-top\" src={this.props.moviePoster} alt=\"\" />\r\n        <div className=\"card-body h-100\">\r\n          <h2 className=\"card-title\">{this.props.movieTitle} </h2>\r\n          <p className=\"card-text\">{this.props.movieDescription.substring(0, 150)}...</p>\r\n          <Link to={linkMovieDetails}  className=\"btn btn-primary\">Details</Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import React, { Component } from 'react';\r\nimport Card from '../Card/'\r\n\r\nconst apiKey = \"651538de087f3f0925486d91bb7b1e73\";\r\nconst apiURL = \"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=\" + apiKey;\r\nconst posterPath = \"https://image.tmdb.org/t/p/w500/\"\r\n\r\nclass PopularMovies extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            popularMovies: []\r\n        };\r\n    }\r\n\r\n    getPopularMovies = () => {\r\n\r\n        fetch(apiURL, {\r\n            method: \"GET\" // POST\r\n        }).then(res => res.json())\r\n        .then(res => {\r\n          this.setState({ popularMovies: res.results})\r\n        })\r\n        .then(res => console.log(this.state))\r\n        .catch(e => console.log(e))\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getPopularMovies()\r\n    }\r\n    \r\n\r\n    render() { \r\n\r\n        var containerStyle = {\r\n            width: \"20rem\"\r\n          };\r\n\r\n       // const { isLoaded, forecast, cityID, cityName, weatherIcon } = this.state;\r\n       const { popularMovies } = this.state\r\n       var linkMovieDetails = \"\"\r\n\r\n        return ( \r\n            <div>\r\n                <div className=\"cardContainer\">\r\n                    <div className=\"row\">\r\n                        {\r\n                            popularMovies.map((m) => {\r\n\r\n                                linkMovieDetails = \"https://api.themoviedb.org/3/movie/\" + m.id + \"?api_key=\" + apiKey\r\n\r\n                                return(\r\n                                    <Card \r\n                                            key={m.id}\r\n                                            movieID={m.id} \r\n                                            movieTitle={m.title} \r\n                                            movieDescription={m.overview} \r\n                                            moviePoster = {posterPath + m.backdrop_path}\r\n                                            movieDetailsURL = {linkMovieDetails} />\r\n                                )\r\n                            })\r\n                        }\r\n                    </div> \r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default PopularMovies;","import React, { Component } from 'react';\r\n\r\nimport './MovieDetails.css';\r\n\r\nconst apiKey = \"651538de087f3f0925486d91bb7b1e73\";\r\nconst apiURL = \"https://api.themoviedb.org/3/movie/\"\r\nconst bgPath = \"https://image.tmdb.org/t/p/original/\"\r\nconst posterPath = \"https://image.tmdb.org/t/p/w300/\"\r\n\r\nclass MovieDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(this.props.match.params.id);\r\n\r\n        this.state = {\r\n            movieID: this.props.match.params.id,\r\n            movieDetails: {}\r\n        };\r\n    }\r\n\r\n    getMovieDetails = (mID) => {\r\n\r\n        fetch(apiURL + mID + \"?api_key=\" + apiKey, {\r\n            method: \"GET\" // POST\r\n        }).then(res => res.json())\r\n        .then(res => {\r\n          this.setState({ movieDetails: res})\r\n        })\r\n        .then(res => console.log(this.state))\r\n        .catch(e => console.log(e))\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getMovieDetails(this.state.movieID)\r\n    }\r\n    \r\n\r\n    render() { \r\n\r\n        const { movieDetails } = this.state\r\n\r\n        var bgImage = bgPath +  movieDetails.backdrop_path\r\n        var posterImage = posterPath +  movieDetails.poster_path\r\n        // var bgImage = \"test.jpg\"\r\n\r\n        console.log(bgImage)\r\n\r\n        var containerStyle = {\r\n            // width: \"100%\",\r\n            // height: \"400px\",\r\n            // backgroundColor: \"#e8ecf1\",\r\n            // // backgroundImage: \"url(\" +  bgImage  + \")\",\r\n            // backgroundSize: \"100% 400px\",\r\n            // backgroundRepeat: \"no-repeat\"\r\n          };\r\n\r\n       // const { isLoaded, forecast, cityID, cityName, weatherIcon } = this.state;\r\n       \r\n       var linkMovieDetails = \"\"\r\n\r\n        return ( \r\n                <div id=\"#movie-details-container\" style={ containerStyle }>\r\n                    <div className=\"row\">\r\n                        \r\n                     \r\n                    <div className=\"col\">\r\n                        <img src={posterImage} />\r\n                    </div>\r\n\r\n                    <div className=\"col\">\r\n                            <h1>{movieDetails.title}</h1>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default MovieDetails;","import React, { Component } from 'react';\r\n\r\nclass Error extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {              \r\n        };\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div>  \r\n                Page Not Found!             \r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Error;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Header from './components/Header/'\nimport Footer from './components/Footer/'\nimport PopularMovies from './components/PopularMovies/'\nimport MovieDetails from './components/MovieDetails/'\nimport Error from './components/Error/'\n\n// import logo from './logo.svg';\nimport './App.css';\n//import Flippy, { FrontSide, BackSide } from 'react-flippy';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {   \n        // options: [\n        //     { value: true, label: 'Yes' },\n        //     { value: false, label: 'No' }\n        // ],\n    };\n  }\n\n  componentDidMount() {\n    //this.getWeather();    \n  }\n\n  render() {    \n\n    return(                      \n          <Router>\n            <div id=\"root-container\">\n              <Header /> \n              <div className=\"container\">\n                <Switch>\n                  <Route path=\"/\" component={PopularMovies} exact />\n                  <Route path=\"/movie/:id\" component={MovieDetails} />\n                  <Route component={Error} />\n                </Switch>\n              </div>\n              <Footer /> \n            </div>\n          </Router>\n    )  \n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}